{"ast":null,"code":"var _jsxFileName = \"/Users/leoneloliviera/Desktop/ebay-app/src/context/ProductListingsProvider.js\";\nimport * as React from 'react';\nconst DefaultState = {\n  productListings: [],\n  filter: {}\n};\nconst ProductListingsContext = React.createContext(DefaultState);\nexport const ProductListingsConsumer = ProductListingsContext.Consumer;\nexport class ProductListingsProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = DefaultState;\n\n    this.getListingByProductId = productId => {\n      const {\n        productListings\n      } = this.state;\n      console.log(this.state.res.title);\n      return productListings.find(listing => listing.id === Number(productId));\n    };\n\n    this.updateFilter = filter => {\n      this.setState({\n        filter\n      });\n    };\n  }\n\n  static applyFilter(listings, filter) {\n    const {\n      priceFrom,\n      postcode,\n      sortOrder,\n      prodTitle\n    } = filter;\n    let result = listings;\n\n    if (priceFrom) {\n      const from = priceFrom;\n      result = result.filter(item => item.price >= from);\n    }\n\n    if (prodTitle) {\n      // console.log('yes')\n      result = result.filter(item => item.title.toLowerCase().includes(prodTitle));\n    }\n\n    if (postcode) {\n      result = result.filter(item => item.postcode.toLowerCase().startsWith(postcode));\n    }\n\n    if (sortOrder) {\n      if (sortOrder === 'highestfirst') {\n        result = result.sort((a, b) => b.price - a.price);\n      }\n\n      if (sortOrder === 'lowestfirst') {\n        result = result.sort((a, b) => a.price - b.price);\n      }\n    }\n\n    return result;\n  }\n\n  componentDidMount() {\n    // fetch('/server/listings.json')\n    fetch('https://api.myjson.com/bins/18vgb2').then(res => res.json()).then(res => {\n      this.setState({\n        productListings: res\n      });\n    });\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      productListings,\n      filter\n    } = this.state;\n    const filteredListings = ProductListingsProvider.applyFilter(productListings, filter);\n    return React.createElement(ProductListingsContext.Provider, {\n      value: {\n        allListings: productListings,\n        productListings: filteredListings,\n        updateFilter: this.updateFilter,\n        getListingByProductId: this.getListingByProductId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, children);\n  }\n\n}","map":{"version":3,"sources":["/Users/leoneloliviera/Desktop/ebay-app/src/context/ProductListingsProvider.js"],"names":["React","DefaultState","productListings","filter","ProductListingsContext","createContext","ProductListingsConsumer","Consumer","ProductListingsProvider","Component","state","getListingByProductId","productId","console","log","res","title","find","listing","id","Number","updateFilter","setState","applyFilter","listings","priceFrom","postcode","sortOrder","prodTitle","result","from","item","price","toLowerCase","includes","startsWith","sort","a","b","componentDidMount","fetch","then","json","render","children","props","filteredListings","allListings"],"mappings":"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","sourcesContent":["import * as React from 'react'\n\nconst DefaultState = {\n  productListings: [],\n  filter: {}\n}\n\nconst ProductListingsContext = React.createContext(DefaultState)\n\nexport const ProductListingsConsumer = ProductListingsContext.Consumer\n\nexport class ProductListingsProvider extends React.Component {\n  static applyFilter(listings, filter) {\n    const { priceFrom, postcode, sortOrder, prodTitle } = filter\n    let result = listings\n    if (priceFrom) {\n      const from = priceFrom\n      result = result.filter(item => item.price >= from)\n    }\n    if (prodTitle) {\n      // console.log('yes')\n      result = result.filter(item => item.title.toLowerCase().includes(prodTitle))\n    }\n    if (postcode) {\n      result = result.filter(item => item.postcode.toLowerCase().startsWith(postcode))\n    }\n    if (sortOrder) {\n      if (sortOrder === 'highestfirst') {\n        result = result.sort((a, b) => b.price - a.price)\n      }\n      if (sortOrder === 'lowestfirst') {\n        result = result.sort((a, b) => a.price - b.price)\n      }\n    }\n    return result\n  }\n\n  state = DefaultState\n\n  componentDidMount() {\n    // fetch('/server/listings.json')\n    fetch('https://api.myjson.com/bins/18vgb2')\n      .then(res => res.json())\n      .then(res => {\n        this.setState({ productListings: res })\n      })\n  }\n\n  getListingByProductId = productId => {\n    const { productListings } = this.state\n    console.log(this.state.res.title)\n    return productListings.find(listing => listing.id === Number(productId))\n    \n  }\n\n  updateFilter = filter => {\n    this.setState({\n      filter\n    })\n  }\n\n  render() {\n    const { children } = this.props\n    const { productListings, filter } = this.state\n\n    const filteredListings = ProductListingsProvider.applyFilter(\n      productListings,\n      filter\n    )\n\n    return (\n      <ProductListingsContext.Provider\n        value={{\n          allListings: productListings,\n          productListings: filteredListings,\n          updateFilter: this.updateFilter,\n          getListingByProductId: this.getListingByProductId\n        }}\n      >\n        {children}\n      </ProductListingsContext.Provider>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}